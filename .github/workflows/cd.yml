name: CI Pipeline

on:
  push:
    branches:
      [ main, feature/29-cd-파이프라인-구축]

jobs:
  Continuous-Deployment:
    runs-on: ubuntu-latest
    steps:
      - name: AWS Resource에 접근할 수 있게 AWS credentials 설정
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-northeast-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: ECR에 로그인하기
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Docker 이미지 생성
        run: docker build -t sscanner-backend .

      - name: Docker 이미지에 tag 붙이기
        run: docker tag sscanner-backend:latest 211125297893.dkr.ecr.ap-northeast-2.amazonaws.com/sscanner-backend:latest

      - name: ECR에 Docker 이미지 Push
        run: docker push 211125297893.dkr.ecr.ap-northeast-2.amazonaws.com/sscanner-backend:latest

      - name: 압축하기
        run: tar -czvf $GITHUB_SHA.tar.gz appspec.yml scripts docker-compose

      - name: S3에 프로젝트 폴더 업데이트 하기
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.tar.gz s3://sscanner-bucket-codedeployfiles/$GITHUB_SHA.tar.gz

      - name: CodeDeploy를 활용해 EC2에 프로젝트 코드 배포
        run: aws deploy create-deployment
          --application-name sscanner-code_deploy
          --deployment-group-name Production
          --deployment-config-name CodeDeployDefault.AllAtOnce
          --s3-location bucket=sscanner-bucket-codedeployfiles,bundleType=tgz,key=$GITHUB_SHA.tar.gz